/*
 * -------------------------------------------------
 *  Nextflow config file for running tests
 * -------------------------------------------------
 * Defines bundled input files and everything required
 * to run a fast and simple test. Use as follows:
 *   nextflow run nf-core/methylseq -profile test
 */

params {
  project_name            = 'test_run'
  project_description     = 'A simple imputation run on chrm 6 distributed with git repo'
  outDir                  = "output/${project_name}" // outDir: where to put all pipeline's outputs
  help                    = false
  max_memory = 2.GB
  max_cpus = 2
  max_time = 48.h



  // Reference panels
  // Replace chromosome with %s for string interpolation to use multiple chromosomes
  ref_panels = ['H3Av4', 'H3Av4_2']

  // Study datasets [dataset_name, refpanel_name, target_vcf, imputed_vcfs, imputed_infos]
  datasets = [
    ["testStudy", "H3Av4", "/cbio/projects/001/clients/hlaimpute/datasets/trial/imputed_omni_hg19.vcf.gz", 
      "/cbio/users/mamana/output/test_run/imputed/H3Av4/testStudy/testStudy_H3Av4_chr6.imputed.vcf.gz",
      "/cbio/users/mamana/output/test_run/imputed/H3Av4/testStudy/testStudy_H3Av4_chr6.imputed_info"
      ],
    ["testStudy1", "H3Av4", "/cbio/projects/001/clients/hlaimpute/datasets/trial/imputed_omni_hg19.vcf.gz", 
      "/cbio/users/mamana/output/test_run/imputed/H3Av4/testStudy1/testStudy1_H3Av4_chr6.imputed.vcf.gz",
      "/cbio/users/mamana/output/test_run/imputed/H3Av4/testStudy1/testStudy1_H3Av4_chr6.imputed_info"
    ],
    ["testStudy2", "H3Av4", "/cbio/projects/001/clients/hlaimpute/datasets/trial/imputed_omni_hg19.vcf.gz", 
      "/cbio/users/mamana/output/test_run/imputed/H3Av4/testStudy2/testStudy2_H3Av4_chr6.imputed.vcf.gz",
      "/cbio/users/mamana/output/test_run/imputed/H3Av4/testStudy2/testStudy2_H3Av4_chr6.imputed_info"
    ],
    ["testStudy2", "H3Av4_2", "/cbio/projects/001/clients/hlaimpute/datasets/trial/imputed_omni_hg19.vcf.gz", 
      "/cbio/users/mamana/output/test_run/imputed/H3Av4_2/testStudy/testStudy_H3Av4_2_chr6.imputed.vcf.gz",
      "/cbio/users/mamana/output/test_run/imputed/H3Av4_2/testStudy/testStudy_H3Av4_2_chr6.imputed_info"
    ],
  ]










  // Genetic map for eagle2
  eagle_genetic_map = "/cbio/users/mamana/reference/eagle/tables/genetic_map_hg19_withX.txt.gz"

  // Reference genome used for QC
  reference_genome  = "/cbio/users/mamana/reference/gatk_bundle/human_g1k_v37_decoy.fasta"

  // List chromosomes to be used. chr22 for b38. Use ALL or '' to use all available chromosome in the target dataset
  chromosomes = "6,21,22"

  // imputation parameters
  NE = "20000"
  impute_iter = "10"
  impute_burnin = "2" // must be less than impute_burnin
  impute_info_cutoff = "0.3"
  chunk_size = "50000000" // in base
  buffer_size = "1000000" // in base

  // QC parameters
  site_miss                = "0.05"
  hwe			  = "0.00001"
  mac			  = "1"
  min_ac = '2'
  min_alleles = '2'
  max_alleles = '2'

  // Phasing method: shapeit (default) or eagle2
  phasing_method          = "eagle"

  // Imputation method minimac4 (default) or IMPUTE2
  impute_method           = "minimac4"

  // Minimac4 option
  minRatio = '0.001'

  // Phasing method: eagle2 (default) or shapeit
  phasing_method          = "eagle"

  // Plink to use, sometimes it can be plink2
  plink="plink2"

  // Email
  email = ''

}

timeline {
  enabled = true
  file = "${params.outDir}/nextflow_reports/${params.project_name}_h3achipimputation_timeline.html"
}
report {
  enabled = true
  file = "${params.outDir}/nextflow_reports/${params.project_name}_h3achipimputation_report.html"
}
trace {
  enabled = true
  file = "${params.outDir}/nextflow_reports/${params.project_name}_h3achipimputation_trace.txt"
}
dag {
  enabled = true
  file = "${params.outDir}/nextflow_reports/${params.project_name}_h3achipimputation_dag.png"
}

process {
// Process-specific resource requirements
  withLabel: 'medium' {
    // errorStrategy = { task.exitStatus in [143, 137, 255] ? 'retry' : 'ignore' }
    memory = 1.GB
  }
  withLabel : 'bigmem' {
    // errorStrategy = { task.exitStatus in [143, 137, 255] ? 'retry' : 'ignore' }
    memory = 1.GB
  }
}

profiles{
  singularity {
    singularity.runOptions = " -B ${HOME} "
  }
  slurm {
    queueSize = 10
  }
  test {
    queueSize = 10
  }
}
