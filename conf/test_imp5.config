/*
 * -------------------------------------------------
 *  Nextflow config file for running tests
 * -------------------------------------------------
 * Defines bundled input files and everything required
 * to run a fast and simple test. Use as follows:
 *   nextflow run nf-core/methylseq -profile test
 */

params {
  project_name            = 'test_run'
  project_description     = 'A simple imputation run on chrm 6 distributed with git repo'
  outDir                  = "output/${project_name}" // outDir: where to put all pipeline's outputs
  help                    = false
  max_memory = 2.GB
  max_cpus = 2
  max_time = 48.h

  // Reference panels
  // Per chromosomes [name, m3vcf, vcf_or_bcf]
  // Replace chromosome with %s for string interpolation to use multiple chromosomes
  ref_panels = [ 
    // [ 'testRefPanel', "https://github.com/h3abionet/chipimputation_test_data/raw/master/testdata_imputation/refPanel_testdata_22_phased.m3vcf.gz", "https://github.com/h3abionet/chipimputation_test_data/raw/master/testdata_imputation/refPanel_testdata_22_phased.vcf.gz" ],
    [ 'testRefPanel_imp5', "/cbio/users/mamana/impute5_v1.1.4/test/reference.imp5", "/cbio/users/mamana/impute5_v1.1.4/test/reference.bcf" ],
  ]

  // Study datasets
  target_datasets = [
    ["testStudy", "/cbio/users/mamana/impute5_v1.1.4/test/target.vcf.gz"]
    // ["testStudy", "/cbio/projects/001/clients/hlaimpute/datasets/omni_mhc_ggvp.vcf.gz"]
    // ["testStudy", "https://github.com/h3abionet/chipimputation_test_data/raw/master/testdata_imputation/target_testdata.vcf.gz"]
  ]

  // Genetic map for eagle2
  eagle_genetic_map = "/cbio/users/mamana/reference/eagle/tables/genetic_map_hg19_withX.txt.gz"
  impute5_genetic_map = "/cbio/users/mamana/reference/shapeit4/maps/chr%s.b37.gmap.gz"

  // Reference genome used for QC
  reference_genome  = "/cbio/users/mamana/reference/gatk_bundle/human_g1k_v37_decoy.fasta"
  // List chromosomes to be used. chr22 for b38. Use ALL or '' to use all available chromosome in the target dataset
  chromosomes = "20"

  // imputation parameters
  NE = "20000"
  impute_iter = "10"
  impute_burnin = "2" // must be less than impute_burnin
  impute_info_cutoff = "0.3"
  chunk_size = "20000000" // in base
  buffer_size = "1000000" // in base

  // QC parameters
  site_miss                = "0.05"
  hwe			  = "0.00001"
  mac			  = "1"
  min_ac = '2'
  min_alleles = '2'
  max_alleles = '2'

  // Phasing method: shapeit (default) or eagle2
  phasing_method          = "eagle"

  // Imputation method minimac4 (default) or IMPUTE2
  impute_method           = "minimac4"

  // Minimac4 option
  minRatio = '0.001'

  // Phasing method: eagle2 (default) or shapeit
  phasing_method          = "eagle"

  // Plink to use, sometimes it can be plink2
  plink="plink2"

  // Email
  email = ''

}

timeline {
  enabled = true
  file = "${params.outDir}/nextflow_reports/${params.project_name}_h3achipimputation_timeline.html"
}
report {
  enabled = true
  file = "${params.outDir}/nextflow_reports/${params.project_name}_h3achipimputation_report.html"
}
trace {
  enabled = true
  file = "${params.outDir}/nextflow_reports/${params.project_name}_h3achipimputation_trace.txt"
}
dag {
  enabled = true
  file = "${params.outDir}/nextflow_reports/${params.project_name}_h3achipimputation_dag.png"
}

process {
// Process-specific resource requirements
  withLabel: 'medium' {
    errorStrategy = 'retry'
    memory = 1.GB
  }
  withLabel : 'bigmem' {
    errorStrategy = 'retry'
    memory = 1.GB
  }

  withLabel : 'bigmem_impute5' {
    errorStrategy = 'retry'
    memory = 1.GB
    container = 'docker://quay.io/mypandos/impute5:latest'
  }

}

profiles{
  singularity {
    singularity.runOptions = " -B ${HOME} "
  }
  slurm {
    queueSize = 10
  }
  test {
    queueSize = 10
  }
}
