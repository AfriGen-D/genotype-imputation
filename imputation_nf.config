config = ''


manifest {
    homePage = 'https://github.com/h3abionet/chipimputation/'
    description = ''
    mainScript = 'imputation.nf'
}

params {
    project_name             = 'IMPUTE'
    // Directories
    // homedir: Path to your script, where the nextflow main script is located
    homedir                 = "${HOME}/imputation/chipimputation"
    // outdir: where to put all pipeline's outputs
    output_dir              = "/researchdata/fhgfs/mamana/imputation"
    impute_result           = "${output_dir}/impute_results"
    scripts                 = "${params.homedir}/scripts"

    // Reference panel 1
    ref_1 {
        dir               = "/researchdata/fhgfs/mamana/reference"
        name              = '1KG'
        hapFile           = "${ref_1.dir}/1000G/HAP/1000GP_Phase3/1000GP_Phase3_chr%s.hap.gz"
        legendFile        = "${ref_1.dir}/1000G/HAP/1000GP_Phase3/1000GP_Phase3_chr%s.legend.gz"
        mapFile           = "${ref_1.dir}/1000G/HAP/1000GP_Phase3/genetic_map_chr%s_combined_b37.txt"
        sampleFile        = "${ref_1.dir}/1000G/HAP/1000GP_Phase3/1000GP_Phase3.sample"
    }
    // Reference panel 2. Uncomment if you need two reference panels
    ref_2 {
        dir               = "/researchdata/fhgfs/mamana"
        name              = 'CBIO'
        hapFile           = "${ref_2.dir}/AFRICA_CHIP/CHIP_FINAL_SET_SEPT_2016/REF_IMPUTE_H3A/HAP_CBIO_SANGER/CBIO/h3a_chr%s.hap.gz"
        legendFile        = "${ref_2.dir}/AFRICA_CHIP/CHIP_FINAL_SET_SEPT_2016/REF_IMPUTE_H3A/HAP_CBIO_SANGER/CBIO/h3a_chr%s.legend.gz"
        mapFile           = "${ref_1.dir}/1000G/HAP/1000GP_Phase3/genetic_map_chr%s_combined_b37.txt"
        sampleFile        = "${ref_2.dir}/AFRICA_CHIP/CHIP_FINAL_SET_SEPT_2016/REF_IMPUTE_H3A/VCF_CBIO_SANGER/CBIO/CBIO_updated.sample"
    }
    eagle_genetic_map       = "${homedir}/tables/genetic_map_hg19_withX.txt.gz"

    // chunk size in base
    NE                      = "20000"
    impute_iter             = "10"
    impute_burnin           = "2" // must be less than impute_burnin
    impute_info_cutoff      = "0.8"
    chunk_size              = "1000000"

    // Data in PLINK bed format
    bedFile                 = "/researchdata/fhgfs/mamana/imputation/data/raw/tiny.yri.bed"
    famFile                 = "/researchdata/fhgfs/mamana/imputation/data/raw/tiny.yri.fam"
    bimFile                 = "/researchdata/fhgfs/mamana/imputation/data/raw/tiny.yri.bim"
    chromosomes             = "ALL"
    //chromosomes             = "22"

    // Plink QC parameters
    cut_mind                = "0.05"
    cut_geno                = "0.05"
    cut_hwe                 = "1E-8"

    // Phasing method: shapeit (default) or eagle2
    phasing_method          = "eagle"

}

executor{
    jobName = { "$task.tag" }
}

profiles {
    // For execution on a local machine, no containerization. -- Default
    standard {
        process.executor = 'local'
    }
    local {
        params {
            //threadCounts = [ 4 ]
            //alignThreads = 4
            resultsDir = "results"
        }

        executor {
            name = "local"
            //cpus = 4
        }
        docker {
            enabled = false
        }
    }
    // For execution on a PBS scheduler, no containerization.
    pbs {
        process{
            executor        = 'pbs'
            queue           = 'UCTlong'
            memory          = 2.GB
            cpus            = 1
            time            = 1.h
            maxRetries      = 5
            maxErrors       = 10000
            scratch         = 'true'
            errorStrategy   = 'retry'
            // errorStrategy   = { if (task.exitStatus == 143) { 'retry' } else if (task.exitStatus == 140 ) { 'retry' } else if (task.exitStatus == 137 ) { 'retry' } else { 'terminate' } }
            // TODO set scracth folder
        }
    }
}

workflow.onComplete = {
    println "========================================="
    println "Pipeline completed at: $workflow.complete"
    println "Execution status: ${ workflow.success ? 'OK' : 'failed' }"
}
